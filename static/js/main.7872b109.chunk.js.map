{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Backdrop/Backdrop.css","hoc/HOC.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurguerBuilder/BurguerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BuildControl","Label","Less","More","BuildControls","OrderButton","enable","Button","Success","Danger","Conteudo","Burger","Modal","Backdrop","aux","props","children","layout","react_default","a","createElement","HOC","className","classes","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredients_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","onClick","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","backdrop","show","clicked","modal","Backdrop_Backdrop","modalClosed","style","transform","opacity","button","btnType","join","orderSummary","ingredientsSummary","textTransform","Button_Button","purchaseCancelled","purchaseContinued","INGREDIENT_PRICES","salada","queijo","carne","bacon","BurguerBuilder","state","totalPrice","compravel","purchasing","purchaseCancelHandler","_this","setState","addIngredientHandler","updatedCount","updatedIngredients","objectSpread","priceAddition","newPrice","updatedPurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseContinueHandler","alert","sum","disabledInfo","Modal_Modal","OrderSummary","Burger_Burger","BuildControls_BuildControls","App","Layout_Layout","containers_BurguerBuilder_BurguerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7872b109.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__v1Mdc\",\"BreadTop\":\"BurgerIngredient__BreadTop__30I6U\",\"Seeds1\":\"BurgerIngredient__Seeds1__2VmWM\",\"Seeds2\":\"BurgerIngredient__Seeds2__25rjQ\",\"Meat\":\"BurgerIngredient__Meat__2HYmd\",\"Cheese\":\"BurgerIngredient__Cheese__3OU0y\",\"Salad\":\"BurgerIngredient__Salad__PBCV5\",\"Bacon\":\"BurgerIngredient__Bacon__3Zxv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__ibcUQ\",\"Label\":\"BuildControl__Label__2VLnR\",\"Less\":\"BuildControl__Less__3X6hg\",\"More\":\"BuildControl__More__2eQpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__220uz\",\"OrderButton\":\"BuildControls__OrderButton__1ScSk\",\"enable\":\"BuildControls__enable__3XAWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Success\":\"Button__Success__1DMln\",\"Danger\":\"Button__Danger__18hYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Conteudo\":\"Layout__Conteudo__2DhLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__2h2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__cd320\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","const aux = (props) => props.children;\r\n\r\n\r\nexport default aux;\r\n","import React from 'react';\r\nimport Aux from '../../hoc/HOC';\r\nimport classes from './Layout.css';\r\n\r\nconst layout = ( props ) => (\r\n  <Aux>\r\n  <main className={classes.Conteudo}>\r\n    {props.children}\r\n  </main>\r\n  </Aux>\r\n);\r\n\r\n\r\nexport default layout;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n      let ingredient = null;\r\n\r\n      switch (this.props.type) {\r\n        case ('bread-bottom'):\r\n          ingredient = <div className={classes.BreadBottom}></div>;\r\n          break;\r\n        case ('bread-top'):\r\n          ingredient = (\r\n            <div className={classes.BreadTop}>\r\n              <div className={classes.Seeds1}></div>\r\n              <div className={classes.Seeds2}></div>\r\n            </div>\r\n          );\r\n          break;\r\n        case ('carne'):\r\n          ingredient = <div className={classes.Meat}></div>;\r\n          break;\r\n        case ('queijo'):\r\n          ingredient = <div className={classes.Cheese}></div>;\r\n          break;\r\n        case ('salada'):\r\n          ingredient = <div className={classes.Salad}></div>;\r\n          break;\r\n        case ('bacon'):\r\n          ingredient = <div className={classes.Bacon}></div>;\r\n          break;\r\n        default:\r\n          ingredient = null;\r\n      }\r\n      return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient';\r\nimport classes from './Burger.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i ) => {\r\n          return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el)\r\n    }, []);\r\n    if (transformedIngredients.length === 0 ) {\r\n        transformedIngredients = <p>Por favor, coloque alguns ingredientes!</p>\r\n    }\r\n    return (\r\n      <div className={classes.Burger}>\r\n        <BurgerIngredient type=\"bread-top\"/>\r\n        {transformedIngredients}\r\n        <BurgerIngredient type=\"bread-bottom\"/>\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\nexport default burger;\r\n","import React from 'react';\r\nimport classes from './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Menos</button>\r\n    <button className={classes.More} onClick={props.added}>Mais</button>\r\n  </div>\r\n);\r\n\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salada', type: 'salada'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Queijo', type: 'queijo'},\r\n    { label: 'Carne', type: 'carne'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>Preço atual: <strong>{props.price.toFixed(2)}</strong></p>\r\n    {controls.map(ctrl => (\r\n      <BuildControl\r\n      added={() => props.ingredientAdded(ctrl.type)}\r\n      removed={() => props.ingredientRemoved(ctrl.type)}\r\n       key={ctrl.label}\r\n       label={ctrl.label}\r\n       disabled={props.disabled[ctrl.type]}/>\r\n    ))}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}>Peça agora!</button>\r\n  </div>\r\n);\r\n\r\nexport default buildControls;\r\n","import React from 'react';\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n  props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/HOC';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nconst modal = (props) => (\r\n  <Aux>\r\n  <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n  <div\r\n    style={{\r\n      transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n      opacity: props.show ? '1' : '0'\r\n    }}\r\n    className={classes.Modal}>\r\n    {props.children}\r\n  </div>\r\n  </Aux>\r\n);\r\n\r\nexport default modal;\r\n","import React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) => (\r\n  <button\r\n    className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;\r\n","import React from 'react';\r\nimport Aux from '../../../hoc/HOC';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n  const ingredientsSummary = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n      return (\r\n        <li key={igKey}>\r\n          <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n        </li>\r\n      )\r\n    });\r\n\r\n  return (\r\n    <Aux>\r\n      <h3>Seu pedido</h3>\r\n      <p>Um hambúrguer com os seguintes ingredientes:</p>\r\n      <ul>\r\n        {ingredientsSummary}\r\n      </ul>\r\n      <p><strong>Preço total: {props.price.toFixed(2)}</strong></p>\r\n      <p>Continuar para o Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCELAR</Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUAR</Button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\n\r\nexport default orderSummary;\r\n","import React, { Component } from 'react'\r\nimport Aux from '../../hoc/HOC';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salada: 1,\r\n  queijo: 0.8,\r\n  carne: 2.6,\r\n  bacon: 1.4\r\n};\r\n\r\nclass BurguerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salada: 0,\r\n      bacon: 0,\r\n      queijo: 0,\r\n      carne: 0\r\n    },\r\n    totalPrice: 12,\r\n    compravel: false,\r\n    purchasing: false\r\n  };\r\n\r\n  updatedPurchaseState (ingredients) {\r\n      const sum = Object.keys(ingredients)\r\n        .map(igKey => {\r\n          return ingredients[igKey]\r\n        })\r\n        .reduce((sum, el) => {\r\n          return sum + el;\r\n        }, 0);\r\n      this.setState({compravel: sum > 0});\r\n  }\r\n\r\n  purchaseCancelHandler = () => {\r\n    this.setState({purchasing: false});\r\n  }\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients =  {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice +  priceAddition;\r\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    this.updatedPurchaseState(updatedIngredients);\r\n  }\r\n\r\n  removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients =  {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    this.updatedPurchaseState(updatedIngredients);\r\n  }\r\n\r\n  purchaseHandler = () => {\r\n    this.setState({purchasing: true});\r\n  }\r\n\r\n  purchaseContinueHandler = () => {\r\n    alert('Seu pedido foi realizado!');\r\n  }\r\n\r\n  render () {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    return (\r\n      <Aux>\r\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n          <OrderSummary\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinued={this.purchaseContinueHandler}\r\n            price={this.state.totalPrice}\r\n            ingredients={this.state.ingredients}/>\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          price={this.state.totalPrice}\r\n          purchasable={this.state.compravel}\r\n          ordered={this.purchaseHandler}/>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurguerBuilder;\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurguerBuilder from './containers/BurguerBuilder/BurguerBuilder';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <BurguerBuilder/>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}